{"version":3,"sources":["todosApi.js","const.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["loadDataFromServer","url","response","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","HEADERS","code","title","type","TodoItem","_ref","todo","react_default","createElement","id","completed","toString","user","defaultProps","name","TodoList","todosWithUsers","sortByField","className","map","header","key","onClick","todoItem","src_TodoItem","App","_useState","useState","_useState2","Object","slicedToArray","isStarted","setStart","_useState3","_useState4","setTodosWithUsers","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_useState9","_useState10","currentSortField","setSortField","getTodosWithUsers","todosList","usersList","objectSpread2","find","userId","start","todos","users","t0","message","style","color","Fragment","src_TodoList","field","todosCopy","toConsumableArray","sort","b","localeCompare","reverse","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2c966e57.chunk.js","sourcesContent":["export const loadDataFromServer = async(url) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n","export const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nexport const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nexport const HEADERS = [\n  {\n    code: 'id',\n    title: 'Id',\n    type: 'number',\n  },\n  {\n    code: 'title',\n    title: 'Title',\n    type: 'string',\n  },\n  {\n    code: 'completed',\n    title: 'Completed',\n    type: 'boolean',\n  },\n  {\n    code: 'user',\n    title: 'User',\n    type: 'string',\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <td>{todo.completed.toString()}</td>\n    <td>{todo.user}</td>\n  </tr>\n);\n\nTodoItem.propTypes = { todo: PropTypes.objectOf(PropTypes.any) };\n\nTodoItem.defaultProps = {\n  todo: [\n    {\n      id: 'noId',\n      title: 'noTitle',\n      completed: 'noStatus',\n      user: { name: 'noUser' },\n    },\n  ],\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport { HEADERS } from './const';\n\nconst TodoList = ({ todosWithUsers, sortByField }) => (\n  <table className=\"todo\">\n    <thead>\n      <tr>\n        {HEADERS.map(header => (\n          <th\n            key={header.code}\n            onClick={() => sortByField(header.code, header.type)}\n          >\n            {header.title}\n          </th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {todosWithUsers.map(\n        todoItem => <TodoItem key={todoItem.id} todo={todoItem} />\n      )}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todosWithUsers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortByField: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { loadDataFromServer } from './todosApi';\nimport { TODOS_URL, USERS_URL } from './const';\n\nimport TodoList from './TodoList';\n\nconst App = () => {\n  const [isStarted, setStart] = useState(false);\n  const [todosWithUsers, setTodosWithUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentSortField, setSortField] = useState(null);\n\n  const getTodosWithUsers = (todosList, usersList) => todosList.map(\n    todo => ({\n      ...todo,\n      user: usersList.find(user => user.id === todo.userId).name,\n    })\n  );\n\n  const start = async() => {\n    setStart(true);\n    setIsLoading(true);\n\n    try {\n      const todos = await loadDataFromServer(TODOS_URL);\n      const users = await loadDataFromServer(USERS_URL);\n\n      setIsLoading(false);\n      setError('');\n      setTodosWithUsers(getTodosWithUsers(todos, users));\n    } catch (e) {\n      setIsLoading(false);\n      setError(e.message);\n    }\n  };\n\n  const sortByField = (field, type) => {\n    const todosCopy = [...todosWithUsers];\n\n    if (currentSortField === field) {\n      setTodosWithUsers(todosCopy.reverse());\n\n      return;\n    }\n\n    switch (type) {\n      case 'string':\n        todosCopy.sort(\n          (a, b) => a[field].localeCompare(b[field])\n        );\n        break;\n\n      case 'number':\n        todosCopy.sort(\n          (a, b) => a[field] - b[field]\n        );\n        break;\n\n      case 'boolean':\n        todosCopy.sort(\n          (a, b) => a[field].toString().localeCompare(b[field].toString())\n        );\n        break;\n\n      default:\n        todosCopy.sort();\n    }\n\n    setTodosWithUsers(todosCopy);\n    setSortField(field);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"App\">\n        <h2>\n          LOADING...\n        </h2>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"App\">\n        <div style={{ color: 'red' }}>\n          {error}\n        </div>\n        <button\n          type=\"button\"\n          onClick={start}\n        >\n        Try again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {isStarted ? (\n        <>\n          <h1>Dynamic list of todos</h1>\n          <TodoList\n            todosWithUsers={todosWithUsers}\n            sortByField={sortByField}\n          />\n        </>\n      ) : (\n        <button\n          type=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}